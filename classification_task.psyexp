<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.2.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="https://app.prolific.co/submissions/complete?cc=90A59712" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="['data/trust.csv', 'data/SWAT.csv', 'data/initial_qs.csv', 'data/bg.png']" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save hdf5 file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1080, 1920]" valType="list"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="black" valType="color"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="elAddress" updates="None" val="100.1.1.1" valType="str"/>
    <Param name="elDataFiltering" updates="None" val="FILTER_LEVEL_2" valType="str"/>
    <Param name="elLiveFiltering" updates="None" val="FILTER_LEVEL_OFF" valType="str"/>
    <Param name="elModel" updates="None" val="EYELINK 1000 DESKTOP" valType="str"/>
    <Param name="elPupilAlgorithm" updates="None" val="ELLIPSE_FIT" valType="str"/>
    <Param name="elPupilMeasure" updates="None" val="PUPIL_AREA" valType="str"/>
    <Param name="elSampleRate" updates="None" val="1000" valType="num"/>
    <Param name="elSimMode" updates="None" val="False" valType="bool"/>
    <Param name="elTrackEyes" updates="None" val="RIGHT_EYE" valType="str"/>
    <Param name="elTrackingMode" updates="None" val="PUPIL_CR_TRACKING" valType="str"/>
    <Param name="expName" updates="None" val="classification_task" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="eyetracker" updates="None" val="None" valType="str"/>
    <Param name="gpAddress" updates="None" val="127.0.0.1" valType="str"/>
    <Param name="gpPort" updates="None" val="4242" valType="num"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="mgBlink" updates="None" val="('MIDDLE_BUTTON',)" valType="list"/>
    <Param name="mgMove" updates="None" val="CONTINUOUS" valType="str"/>
    <Param name="mgSaccade" updates="None" val="0.5" valType="num"/>
    <Param name="tbLicenseFile" updates="None" val="" valType="str"/>
    <Param name="tbModel" updates="None" val="" valType="str"/>
    <Param name="tbSampleRate" updates="None" val="60" valType="num"/>
    <Param name="tbSerialNo" updates="None" val="" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <ImageComponent name="image">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="data/bg.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="image" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.25, 0.9)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$para.DURATION_MAP[phase]" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'a','l'" valType="list"/>
        <Param name="correctAns" updates="constant" val="$para.VESSEL_MAP[vessel]" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$para.DURATION_MAP[phase]" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="lookup_table_left">
        <Param name="color" updates="constant" val="green" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Lucida Console&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="num"/>
        <Param name="name" updates="None" val="lookup_table_left" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(-0.71, 0.0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$para.DURATION_MAP[phase]" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="&lt;insert lookup text here&gt;&amp;#10;&amp;#10;&lt;Friend frequencies&gt;&amp;#10;&amp;#10;&lt;Foe frequencies&gt;&amp;#10;&amp;#10;0123456789" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="lookup_table_right">
        <Param name="color" updates="constant" val="green" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Lucida Console&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="num"/>
        <Param name="name" updates="None" val="lookup_table_right" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.7, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$para.DURATION_MAP[phase]" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Any text&amp;#10;&amp;#10;including line breaks" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="bands">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="// Random util functions that don't fit elsewhere&amp;#10;import * as jl from &quot;./src/johnlib.js&quot;&amp;#10;// Generative functions (trials orders, line positions, etc)&amp;#10;import * as gen from &quot;./src/generate.js&quot;&amp;#10;// Band objects&amp;#10;import * as band from &quot;./src/band.js&quot;&amp;#10;// Inital parameters&amp;#10;import * as para from &quot;./src/para.js&quot;&amp;#10;// PIXI&amp;#10;import * as PIXI from &quot;./lib/pixi-legacy.min.js&quot;" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="// set text align&amp;#10;lookup_table_left.setAlignHoriz('center');&amp;#10;lookup_table_right.setAlignHoriz('center');&amp;#10;&amp;#10;window.PIXI = PIXI;&amp;#10;window.psychoJS = psychoJS;&amp;#10;// Check if we're using WebGL&amp;#10;let webgl = psychoJS.window._renderer.type == PIXI.RENDERER_TYPE.WEBGL;&amp;#10;psychoJS.experiment.addData('usingWebGL', webgl);&amp;#10;psychoJS.experiment.nextEntry();&amp;#10;&amp;#10;// for showing participant accuracy&amp;#10;acc_sum = 0;&amp;#10;&amp;#10;// track how many supported trials we've done&amp;#10;// mainly just to decide on how much to fade&amp;#10;supported_count = 0;&amp;#10;&amp;#10;bands = [&amp;#10;    new band.Band(&amp;#10;        psychoJS.window,&amp;#10;        [-0.01, 0.24], // pos&amp;#10;        [para.WIDTH, 0.2], // size&amp;#10;        para.VESSEL_SIGNATURES[0][0],&amp;#10;        jl.repeat(1, para.N_LINES),&amp;#10;        para.NTICKS_TOP,  para.BAND_RANGES[0],&amp;#10;    ),&amp;#10;    new band.Band(&amp;#10;        psychoJS.window,&amp;#10;        [-0.01, -0.17], // pos&amp;#10;        [para.WIDTH, 0.2], // size&amp;#10;        para.VESSEL_SIGNATURES[0][1],&amp;#10;        jl.repeat(1, para.N_LINES),&amp;#10;        para.NTICKS_BOTTOM,&amp;#10;        para.BAND_RANGES[1],&amp;#10;    )&amp;#10;];&amp;#10;&amp;#10;psychoJS.experiment.addData('signatures_friend', para.VESSEL_SIGNATURES[0]);&amp;#10;psychoJS.experiment.addData('signatures_foe', para.VESSEL_SIGNATURES[1]);&amp;#10;&amp;#10;psychoJS.experiment.addData('band_ranges_top', para.BAND_RANGES[0]);&amp;#10;psychoJS.experiment.addData('band_ranges_bottom', para.BAND_RANGES[1]);" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="image.setAutoDraw(true);&amp;#10;&amp;#10;bands[active_band].setLines(lines, is_signal);&amp;#10;&amp;#10;var lookup_left = para.LOOKUP_TEXT[0][active_band];&amp;#10;var lookup_right = para.LOOKUP_TEXT[1][active_band];&amp;#10;switch(phase) {&amp;#10;    case 1: // BASELINE PHASE&amp;#10;        if(trials.thisN &lt; para.LOOKUP_REMOVAL_TRIAL) {&amp;#10;            lookup_left = para.LOOKUP_TEXT[0][active_band];&amp;#10;            lookup_right = para.LOOKUP_TEXT[1][active_band];&amp;#10;        } else {&amp;#10;            lookup_left = &quot;Friend\n(Press A)&quot;;&amp;#10;            lookup_right = &quot;Foe\n(Press L)&quot;;&amp;#10;        }&amp;#10;        break;&amp;#10;    case 2: // TRAINING PHASE&amp;#10;        lookup_left = &quot;Friend\n(Press A)&quot;;&amp;#10;        lookup_right = &quot;Foe\n(Press L)&quot;;&amp;#10;        if (active_band == para.SUPPORTED) {&amp;#10;            if (!catch_trial)  { // Don't increment on catch trials&amp;#10;                supported_count++; // increment supported counter&amp;#10;            }&amp;#10;            if(para.CONDITION != &quot;LOWLIGHT&quot;) {&amp;#10;                lookup_left = &quot;Friend\n(Blue)\n(Press A)&quot;;&amp;#10;                lookup_right = &quot;Foe\n(Red)\n(Press L)&quot;;  &amp;#10;            }&amp;#10;        }&amp;#10;        // get proportion for fading support&amp;#10;        let proportion = (supported_count-1) / para.N_SUPPORTED_TRIALS;&amp;#10;        // Four intensity blocks&amp;#10;        let idx = Math.floor(proportion * 4);&amp;#10;        bands[para.SUPPORTED].toggleSupport(true, para.CONDITION, vessel, para.FADING_LEVELS[idx]);&amp;#10;        break;&amp;#10;    case 3: // TEST PHASE&amp;#10;        lookup_left = &quot;Friend\n(Press A)&quot;;&amp;#10;        lookup_right = &quot;Foe\n(Press L)&quot;;&amp;#10;        break;&amp;#10;}&amp;#10;&amp;#10;// Set active band&amp;#10;for(var i = 0; i &lt; bands.length; i++) {&amp;#10;    let band = bands[i];   &amp;#10;    band.active = active_band == i;&amp;#10;    band.rectangle.opacity = 1.0 - band.active;&amp;#10;    band.rectangle._needUpdate = true;&amp;#10;    band.setAutoDraw(true);&amp;#10;}&amp;#10;&amp;#10;lookup_table_left.text = lookup_left;&amp;#10;lookup_table_right.text = lookup_right;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="// Update uniforms&amp;#10;for(var i = 0; i &lt; bands.length; i++) {&amp;#10;    var band = bands[i];&amp;#10;    band.uniforms.frameN = frameN;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="image.setAutoDraw(false);&amp;#10;for(var i = 0; i &lt; bands.length; i++) {&amp;#10;    let band = bands[i];&amp;#10;    band.active = false;&amp;#10;    band.setAutoDraw(false);&amp;#10;}&amp;#10;if (key_resp.corr) {&amp;#10;    feedback_text.text = &quot;Correct&quot;;&amp;#10;} else {&amp;#10;    feedback_text.text = &quot;Incorrect&quot;;&amp;#10;}&amp;#10;&amp;#10;switch(phase) {&amp;#10;    case 1: // BASELINE PHASE&amp;#10;        break;&amp;#10;    case 2: // TRAINING PHASE&amp;#10;        bands[para.SUPPORTED].toggleSupport(false, para.CONDITION, vessel);&amp;#10;        break;&amp;#10;    case 3: // TEST PHASE&amp;#10;        feedback_text.text = &quot;&quot;; // No feedback on test&amp;#10;        acc_sum += key_resp.corr;&amp;#10;        break;&amp;#10;}&amp;#10;&amp;#10;// For some reason it can't add array data automatically&amp;#10;psychoJS.experiment.addData('lines_presented', lines); &amp;#10;psychoJS.experiment.addData('is_signal_presented', is_signal);" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="bands" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback">
      <TextComponent name="feedback_text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.08" valType="num"/>
        <Param name="name" updates="None" val="feedback_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="good work!" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="intro">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="In this experiement, you will be taking on the role of a SONAR operator. You will be classifying different ship types using SONAR signals which appear as vertical lines on a simulated display. This experiment will be testing different ways of supporting SONAR operators to make decisions. &amp;#10;&amp;#10;There will be three sections of the experiment, in which you will recieve different types of assistance to make classifications. This is a learning task, initially it will be difficult, but you may find it easier over time. Please do your best to classify the vessels. Try to find a quiet place without distractions to complete this experiment. The experiment will likely take around 25 minutes in total to complete. There will also be two opportunities to take a 2 minute break.&amp;#10;&amp;#10;Please press the 'space' key to continue to the tutorial." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="outro">
      <TextComponent name="outro_text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="outro_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="120" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5">
        <Param name="allowedKeys" updates="constant" val="" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_5" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="120" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="completion">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="psychoJS.experiment.addData('globalClockTime', globalClock.getTime());&amp;#10;psychoJS.experiment.nextEntry();&amp;#10;&amp;#10;&amp;#10;psychoJS.experiment.addData('userAgent', navigator.userAgent);&amp;#10;psychoJS.experiment.nextEntry();&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="completion" valType="code"/>
      </CodeComponent>
      <CodeComponent name="code_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="&amp;#10;let accuracy  = acc_sum / para.RUN_ORDER[3].length;&amp;#10;&amp;#10;outro_text.text = `Thank you very much for participating!&amp;#10;&amp;#10;For your interest, your accuracy at test was ` + (100 * accuracy).toFixed(2)+ `%.&amp;#10;In this task, we were interested in assessing the relative merits of different ways of overlaying visual assistance to help with learning and decision making.&amp;#10;&amp;#10;Please press any key to complete the experiment.`;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="&amp;#10;let accuracy  = acc_sum / para.RUN_ORDER[3].length;&amp;#10;&amp;#10;outro_text.text = `Thank you very much for participating!&amp;#10;&amp;#10;For your interest, your accuracy at test was ` + accuracy .toFixed(2);+" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instructions">
      <TextComponent name="instructions_text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="instructions_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_4" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="phase_init_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="instructions_text.text = para.instructions[phase];" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="instructions_text.text = para.instructions[phase];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="phase_init_code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="debrief">
      <CodeComponent name="debrief_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="debrief_form = new visual.Form({&amp;#10;    win : psychoJS.window, name:'debrief_form',&amp;#10;    items : 'data/SWAT.csv',&amp;#10;    textHeight : 0.03,&amp;#10;    font : '&quot;Times New Roman&quot;',&amp;#10;    randomize : false,&amp;#10;    size : [0.8, 0.5],&amp;#10;    pos : [0, 0.0],&amp;#10;    //responseColor : 'black',&amp;#10;    itemPadding : 0.12,&amp;#10;    depth: 0.0,&amp;#10;    opacity: 0.0&amp;#10;});&amp;#10;&amp;#10;&amp;#10;&amp;#10;// Fix the text colour 'cos GUI wont' do it&amp;#10;//form.responseColor = 'black';&amp;#10;// Make the broken scrollbar invisible&amp;#10;debrief_form._scrollbar.size = [0,0];&amp;#10;debrief_form._scrollbar.markerColor = 'black';&amp;#10;debrief_form._scrollbar.lineColor = 'black';&amp;#10;debrief_form._scrollbar.fillColor = 'black';&amp;#10;&amp;#10;// Functions for each response&amp;#10;let time_load = function(side) {&amp;#10;    return `${side?'Almost never':'Often'} have spare time. Interruptions or overlap among activities are ${side?'frequent':'infrequent'}.`;&amp;#10;}&amp;#10;let mental_effort = function(side) {&amp;#10;    return `Very ${side?'intense':'little'} concentration required. Activity is ${side?'complex':'almost automatic'}, and requires ${side?'total':'little'} attention.`;&amp;#10;}&amp;#10;let stress_load = function(side) {&amp;#10;    return `Task causes ${side?'intense':'little'} stress due to confusion, frustration or anxiety.`;&amp;#10;}&amp;#10;let funcs = [time_load, mental_effort, stress_load];&amp;#10;&amp;#10;texts = [];&amp;#10;&amp;#10;for (var i = 0; i &lt; 3; i++) {&amp;#10;    for (var j = 0; j &lt; 2; j++) {&amp;#10;        var t = new visual.TextStim({&amp;#10;            win: psychoJS.window,&amp;#10;            name: 't',&amp;#10;            text: funcs[i](j),&amp;#10;            font: '&quot;Times New Roman&quot;',&amp;#10;            units: undefined, &amp;#10;            pos: [-0.35 + j*0.8, 0.13 - i * 0.18], height: 0.023,  wrapWidth: 0.3, ori: 0.0,&amp;#10;            color: new util.Color('white'),  opacity: undefined,&amp;#10;            depth: 3.0 &amp;#10;        });&amp;#10;        texts.push(t);&amp;#10;    }&amp;#10;}" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="button_2.fillColor = 'darkgrey';&amp;#10;button_2.font = 'Times New Roman'&amp;#10;&amp;#10;debrief_form.setAutoDraw(true);&amp;#10;for(var i = 0; i &lt; texts.length; i++) {&amp;#10;    let t = texts[i];   &amp;#10;    t.setAutoDraw(true);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (debrief_form.formComplete()) {&amp;#10;    button_2.fillColor = 'darkblue';&amp;#10;    if (typeof button_2._pixi !== 'undefined') {&amp;#10;        button_2._pixi.interactive = true;&amp;#10;        button_2._pixi.click = function(ev) { continueRoutine = false; }&amp;#10;    }&amp;#10;} else {&amp;#10;    button_2.fillColor = 'darkgrey';&amp;#10;}&amp;#10;&amp;#10;var time = routineTimer.getTime() + 1;&amp;#10;var minutes = Math.floor(time / 60);&amp;#10;var seconds = Math.floor(time % 60);&amp;#10;var timecode = minutes+':'+('0' + seconds).slice(-2)&amp;#10;&amp;#10;&amp;#10;debrief_text.text = `Great work, this phase is now complete!&amp;#10;&amp;#10;Select along each scale below to indicate your assessment of where the task you just performed falls along the continuum between the two descriptions.` +&amp;#10;    'You may take a break for 2 minutes before continuing (' + timecode + ' remaining)';" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="debrief_form.addDataToExp(psychoJS.experiment, 'rows');&amp;#10;&amp;#10;for(var i = 0; i &lt; texts.length; i++) {&amp;#10;    let t = texts[i];   &amp;#10;    t.setAutoDraw(false);&amp;#10;}&amp;#10;&amp;#10;debrief_form._scrollbar.setAutoDraw(false);&amp;#10;for (let i = 0; i &lt; debrief_form._items.length; ++i) {&amp;#10;    var ts = debrief_form._visual.textStims[i];&amp;#10;    if (ts) {&amp;#10;        ts.setAutoDraw(false);&amp;#10;    }&amp;#10;    var rs = debrief_form._visual.responseStims[i];&amp;#10;    if (rs) {&amp;#10;        rs.reset();&amp;#10;        rs.setAutoDraw(false);&amp;#10;    }&amp;#10;}&amp;#10;debrief_form.hide();&amp;#10;debrief_form.setAutoDraw(false);&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="debrief_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="debrief_text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="debrief_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.35)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="120" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Great work! The phase is now complete.&amp;#10;Please select along each scale below to indicate your assessment of where the task you just performed falls along the continuum between the two descriptions." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <ButtonComponent name="button_2">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="bold" updates="constant" val="True" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="color"/>
        <Param name="borderWidth" updates="constant" val="0" valType="num"/>
        <Param name="callback" updates="constant" val="" valType="extendedCode"/>
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="darkgrey" valType="color"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="button_2" valType="code"/>
        <Param name="oncePerClick" updates="constant" val="False" valType="bool"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="padding" updates="constant" val="" valType="num"/>
        <Param name="pos" updates="constant" val="(0.5, -0.4)" valType="list"/>
        <Param name="save" updates="None" val="every click" valType="str"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="[0.35,0.1]" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="120" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Click here to continue" valType="str"/>
        <Param name="timeRelativeTo" updates="constant" val="button onset" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ButtonComponent>
    </Routine>
    <Routine name="explaination">
      <ImageComponent name="screenshot">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="data\screenshot.png" valType="file"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="" valType="str"/>
        <Param name="name" updates="None" val="screenshot" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1.0, 0.5)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="num"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_6">
        <Param name="allowedKeys" updates="constant" val="" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_6" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="tute">
      <KeyboardComponent name="tute_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="tute_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="tute_left">
        <Param name="color" updates="constant" val="green" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Lucida Console&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="num"/>
        <Param name="name" updates="None" val="tute_left" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(-0.71, 0.0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Friend&amp;#10;(Press A):&amp;#10;2.50 Hz&amp;#10;4.00 Hz&amp;#10;6.50 Hz&amp;#10;8.00 Hz" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <TextComponent name="tute_right">
        <Param name="color" updates="constant" val="green" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Lucida Console&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="num"/>
        <Param name="name" updates="None" val="tute_right" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.7, 0)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Foe&amp;#10;(Press L):&amp;#10;3.20 Hz&amp;#10;5.50 Hz&amp;#10;7.80 Hz&amp;#10;9.00 Hz" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="// set text align&amp;#10;tute_left.setAlignHoriz('center');&amp;#10;tute_right.setAlignHoriz('center');&amp;#10;&amp;#10;tutebg = new util.Color([-.9,-.9,-.9]);&amp;#10;&amp;#10;tute_stage = 0;&amp;#10;&amp;#10;tute_config = [&amp;#10;[`This is your SONAR display console. You will notice that there are two different frequency &quot;bands&quot;. Each band represents a different frequency range in Hertz (Hz).&amp;#10;&amp;#10;(Press the 'space' key to continue)`, [0.0, -0.1], [0.8, 0.3]],&amp;#10;&amp;#10;[`On each trial, one of the bands will become active and display simulated SONAR signals. This time, the bottom band has been activated.&amp;#10;&amp;#10;(Press the 'space' key to continue)`, [0.0, 0.3], [0.8, 0.2]],&amp;#10;&amp;#10;[`You will initally need to use the lookup tables, found to the left and right of the console, to determine whether this signal is from a friend or a foe vessel. Can you classify the current vessel?&amp;#10;&amp;#10;(Press the 'space' key to continue)`, [-0.35, 0.3], [0.8, 0.2]],&amp;#10;&amp;#10;[`If you thought that this was a Friend vessel, you were correct! If you were wrong, pay attention to the frequencies listed on the left, and what frequencies are present in the lower band.&amp;#10;&amp;#10;(Press the 'space' key to continue)`, [-0.35, 0.3], [0.8, 0.2]],&amp;#10;&amp;#10;[`You will be given 10 seconds on each trial to classify a vessel. Respond using the A key for friend, or L key for foe. You'll be told if you were correct or not.&amp;#10;Later on in the experiment, the lookup tables will be removed, and an alternative type of assistance will be provided, but you'll learn more about that later.&amp;#10;&amp;#10;(Press the 'space' key to continue)`, [0.0, 0.1], [0.8, 0.3]],&amp;#10;&amp;#10;&amp;#10;]" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="image.setAutoDraw(true);&amp;#10;&amp;#10;&amp;#10;textbox.fillColor = tutebg;&amp;#10;textbox.text = tute_config[tute_stage][0];&amp;#10;textbox.pos = tute_config[tute_stage][1];&amp;#10;textbox.wrapWidth = tute_config[tute_stage][2][0] - 0.1;&amp;#10;&amp;#10;polygon.pos = tute_config[tute_stage][1];&amp;#10;polygon.shape = tute_config[tute_stage][2];&amp;#10;&amp;#10;let tute_lines = [0.21,0.29,0.63,0.84];&amp;#10;&amp;#10;let range = para.BAND_RANGES[1];&amp;#10;let tute_friend_text = &quot;Friend\n(Press A):\n&quot;;&amp;#10;for (var i = 0; i &lt; tute_lines.length; i++) {&amp;#10;    let x = tute_lines[i];&amp;#10;    let val = (range[1] - range[0]) * x + range[0];&amp;#10;    tute_friend_text += val.toFixed(0) + &quot; Hz\n&quot;;&amp;#10;} &amp;#10;tute_foe_text = &quot;Foe\n(Press L):\n&quot; +&amp;#10;&quot;324 Hz\n&quot; +&amp;#10;&quot;552 Hz\n&quot; +&amp;#10;&quot;787 Hz\n&quot; +&amp;#10;&quot;902 Hz&quot;;&amp;#10;&amp;#10;bands[1].setLines(tute_lines, [1,1,1,1]);&amp;#10;switch(tute_stage) {&amp;#10;    case 0:&amp;#10;        tute_left.text = &quot;&quot;;&amp;#10;        tute_right.text = &quot;&quot;;&amp;#10;        // Set active band&amp;#10;        for(var i = 0; i &lt; bands.length; i++) {&amp;#10;            let band = bands[i];&amp;#10;            band.active = 0;&amp;#10;            band.rectangle.opacity = 1.0 - band.active;&amp;#10;            if (para.DEBUG_ENABLED) {&amp;#10;                band.toggleSupport(true, para.CONDITION, 0, 0);&amp;#10;            }&amp;#10;            band.rectangle._needUpdate = true;&amp;#10;            band.setAutoDraw(true);&amp;#10;        }&amp;#10;        break;&amp;#10;    case 1:&amp;#10;        bands[1].active = 1;&amp;#10;        bands[1].rectangle.opacity = 0.0;&amp;#10;        bands[1].rectangle._needUpdate = true;&amp;#10;        bands[1].xaxis.scalebar._needUpdate = true;&amp;#10;        bands[1].setAutoDraw(true);&amp;#10;        break;&amp;#10;    case 2:&amp;#10;        tute_left.text = tute_friend_text;&amp;#10;        tute_right.text = tute_foe_text;&amp;#10;        break;&amp;#10;    default:&amp;#10;        break;&amp;#10;}" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="// Update uniforms&amp;#10;for(var i = 0; i &lt; bands.length; i++) {&amp;#10;    var band = bands[i];&amp;#10;    band.uniforms.frameN = frameN;&amp;#10;}&amp;#10;&amp;#10;let proportion = (frameN % 100) / 100;&amp;#10;if (para.DEBUG_ENABLED) {&amp;#10;    bands[1].toggleSupport(true, para.CONDITION, 1, proportion);&amp;#10;    //bands[1].rectangle._needUpdate = true;&amp;#10;    //bands[1].setAutoDraw(true);&amp;#10;}" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="&amp;#10;&amp;#10;tute_stage++;&amp;#10;&amp;#10;if (tute_stage == tute_config.length) {&amp;#10;    image.setAutoDraw(false);&amp;#10;    for(var i = 0; i &lt; bands.length; i++) {&amp;#10;        let band = bands[i];&amp;#10;        band.active = false;&amp;#10;        band.setAutoDraw(false);&amp;#10;    }&amp;#10;}" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="polygon">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$tutebg" valType="color"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="white" valType="color"/>
        <Param name="lineWidth" updates="constant" val="1" valType="num"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon" valType="code"/>
        <Param name="opacity" updates="constant" val="0.7" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="None" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.8, 0.3)" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <TextComponent name="textbox">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="textbox" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0.0,-0.1)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.5" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="This is your SONAR display console. You will notice that there are two different &quot;bands&quot;. Each band represents a different frequency range.&amp;#10;&amp;#10;(Press the 'space' key to continue)" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="0.7" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="init_qs">
      <CodeComponent name="start_form">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="form.responseColor = 'black'&amp;#10;form._scrollbar." valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="form = new visual.Form({&amp;#10;    win : psychoJS.window, name:'form',&amp;#10;    items : 'data/initial_qs.csv',&amp;#10;    textHeight : 0.03,&amp;#10;    font : '&quot;Times New Roman&quot;',&amp;#10;    randomize : false,&amp;#10;    size : [1, 0.7],&amp;#10;    pos : [0, 0],&amp;#10;    style : 'dark',&amp;#10;    //responseColor : 'black',&amp;#10;    itemPadding : 0.05&amp;#10;});&amp;#10;// Fix the text colour 'cos GUI wont' do it&amp;#10;//form.responseColor = 'black';&amp;#10;// Make the broken scrollbar invisible&amp;#10;form._scrollbar.size = [0,0];&amp;#10;form._scrollbar.markerColor = 'black';&amp;#10;form._scrollbar.lineColor = 'black';&amp;#10;form._scrollbar.fillColor = 'black';&amp;#10;// THIS IS A NON-GENERIC HACK&amp;#10;form._visual.responseStims[1].color = 'black';&amp;#10;form._visual.responseStims[2].color = 'black';&amp;#10;&amp;#10;form._visual.responseStims[1].autofocus = true;&amp;#10;form._visual.responseStims[2].autofocus = false;&amp;#10;&amp;#10;&amp;#10;// Check if we're using WebGL&amp;#10;if(psychoJS.window._renderer.type != PIXI.RENDERER_TYPE.WEBGL) {&amp;#10;  throw &quot;WebGL must be enabled to run this task. Please enable WebGL and try again.&quot;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="button.fillColor = 'darkgrey';&amp;#10;button.font = 'Times New Roman'&amp;#10;form.setAutoDraw(true);&amp;#10;/*&amp;#10;&amp;#10;// Create a style attribute:&amp;#10;const att = document.createAttribute(&quot;value&quot;);&amp;#10;// Set the value of the style attribute:&amp;#10;att.value = &quot;FJDSAFJDSLAJLAD&quot;;&amp;#10;//console.log(form._visual.responseStims[1])&amp;#10;form._visual.responseStims[1]._pixi._dom_input.attributes.setNamedItem(att)&amp;#10;&amp;#10;&amp;#10;const att2 = document.createAttribute(&quot;tabindex&quot;);&amp;#10;// Set the value of the style attribute:&amp;#10;att2.value = &quot;1&quot;;&amp;#10;//console.log(form._visual.responseStims[1])&amp;#10;form._visual.responseStims[2]._pixi._dom_input.attributes.setNamedItem(att2)&amp;#10;*/&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (form.formComplete()) {&amp;#10;    button.fillColor = 'darkblue';&amp;#10;    if (typeof button._pixi !== 'undefined') {&amp;#10;        button._pixi.interactive = true;&amp;#10;        button._pixi.click = function(ev) { continueRoutine = false; }&amp;#10;    }&amp;#10;} else {&amp;#10;    button.fillColor = 'darkgrey';&amp;#10;}" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="form.addDataToExp(psychoJS.experiment, 'rows');&amp;#10;&amp;#10;&amp;#10;form._scrollbar.setAutoDraw(false);&amp;#10;for (let i = 0; i &lt; form._items.length; ++i) {&amp;#10;    &amp;#10;    var ts = form._visual.textStims[i];&amp;#10;    if (ts) {&amp;#10;        ts.setAutoDraw(false);&amp;#10;    }&amp;#10;    var rs = form._visual.responseStims[i];&amp;#10;    if (rs) {&amp;#10;        rs.setAutoDraw(false);&amp;#10;    }&amp;#10;}&amp;#10;form.hide();&amp;#10;form.setAutoDraw(false);" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="start_form" valType="code"/>
      </CodeComponent>
      <ButtonComponent name="button">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="bold" updates="constant" val="True" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="color"/>
        <Param name="borderWidth" updates="constant" val="0" valType="num"/>
        <Param name="callback" updates="constant" val="" valType="extendedCode"/>
        <Param name="color" updates="constant" val="black" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="darkgrey" valType="color"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="button" valType="code"/>
        <Param name="oncePerClick" updates="constant" val="False" valType="bool"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="padding" updates="constant" val="" valType="num"/>
        <Param name="pos" updates="constant" val="(0.5, -0.4)" valType="list"/>
        <Param name="save" updates="None" val="every click" valType="str"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="[0.35,0.1]" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Click here to continue" valType="str"/>
        <Param name="timeRelativeTo" updates="constant" val="button onset" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ButtonComponent>
      <TextComponent name="welc_text">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="welc_text" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.4)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Welcome! Please answer the questions below to get started." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
    </Routine>
    <Routine name="trust_qs">
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="trust = new visual.Form({&amp;#10;    win : psychoJS.window, name:'trust',&amp;#10;    items : 'data/trust.csv',&amp;#10;    fontSize : 0.025,&amp;#10;    font : '&quot;Times New Roman&quot;',&amp;#10;    randomize : false,&amp;#10;    size : [1, 1],&amp;#10;    pos : [0, -0.08],&amp;#10;    style : 'dark',&amp;#10;    //responseColor : 'black',&amp;#10;    itemPadding : 0.025&amp;#10;});&amp;#10;// Fix the text colour 'cos GUI wont' do it&amp;#10;//form.responseColor = 'black';&amp;#10;// Make the broken scrollbar invisible&amp;#10;trust._scrollbar.size = [0,0];&amp;#10;trust._scrollbar.markerColor = 'black';&amp;#10;trust._scrollbar.lineColor = 'black';&amp;#10;trust._scrollbar.fillColor = 'black';&amp;#10;// THIS IS A NON-GENERIC HACK&amp;#10;trust._visual.responseStims[6].color = 'black';&amp;#10;trust._visual.responseStims[7].color = 'black';" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="let aid_text = &quot;supported&quot;;&amp;#10;text_2.text = &quot;With regard to the &quot; + aid_text +&quot; band:&quot;;&amp;#10;&amp;#10;button_3.fillColor = 'darkgrey';&amp;#10;button_3.font = 'Times New Roman'&amp;#10;&amp;#10;trust.setAutoDraw(true);" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="text_2.text = " valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if (trust.formComplete()) {&amp;#10;    button_3.fillColor = 'darkblue';&amp;#10;    if (typeof button_3._pixi !== 'undefined') {&amp;#10;        button_3._pixi.interactive = true;&amp;#10;        button_3._pixi.click = function(ev) { continueRoutine = false; }&amp;#10;    }&amp;#10;} else {&amp;#10;    button_3.fillColor = 'darkgrey';&amp;#10;}&amp;#10;//grr._needUpdate = true;&amp;#10;//grr._pixi.interactive = true;&amp;#10;//grr._pixi.click = function(ev) { console.log(&quot;clicked&quot;); }&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="trust.addDataToExp(psychoJS.experiment, 'rows');&amp;#10;&amp;#10;&amp;#10;trust._scrollbar.setAutoDraw(false);&amp;#10;for (let i = 0; i &lt; trust._items.length; ++i) {&amp;#10;    &amp;#10;    var ts = trust._visual.textStims[i];&amp;#10;    if (ts) {&amp;#10;        ts.setAutoDraw(false);&amp;#10;    }&amp;#10;    var rs = trust._visual.responseStims[i];&amp;#10;    if (rs) {&amp;#10;        rs.reset();&amp;#10;        rs.setAutoDraw(false);&amp;#10;    }&amp;#10;}&amp;#10;// clear textboxes&amp;#10;trust._visual.responseStims[6].clear();&amp;#10;trust._visual.responseStims[7].clear();&amp;#10;trust.hide();&amp;#10;trust.setAutoDraw(false);" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_2">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="Open Sans" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.45)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Yadda" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <ButtonComponent name="button_3">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="bold" updates="constant" val="True" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="color"/>
        <Param name="borderWidth" updates="constant" val="0" valType="num"/>
        <Param name="callback" updates="constant" val="" valType="extendedCode"/>
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="darkgrey" valType="color"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="button_3" valType="code"/>
        <Param name="oncePerClick" updates="constant" val="False" valType="bool"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="padding" updates="constant" val="" valType="num"/>
        <Param name="pos" updates="constant" val="(0.5, -0.45)" valType="list"/>
        <Param name="save" updates="None" val="every click" valType="str"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="[0.35,0.1]" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Click here to continue" valType="str"/>
        <Param name="timeRelativeTo" updates="constant" val="button onset" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ButtonComponent>
    </Routine>
    <Routine name="trust_ins">
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="list"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="let rem_lines = [0.21,0.29,0.63,0.84];&amp;#10;&amp;#10;let active_band = 1;&amp;#10;let band = bands[active_band];&amp;#10;band.setLines(rem_lines, [1,0,1,1]);&amp;#10;band.toggleSupport(true, para.CONDITION, 0, 1);&amp;#10;band.active = 1;&amp;#10;band.rectangle.opacity = 1.0 - band.active;&amp;#10;band.rectangle._needUpdate = true;&amp;#10;band.setAutoDraw(true);&amp;#10;&amp;#10;button_4.fillColor = 'darkblue';&amp;#10;button_4.font = 'Times New Roman'&amp;#10;&amp;#10;let aid_text = &quot;supported&quot;;&amp;#10;text_3.text = `Cast your mind back to the trials on which you were provided with the ` + aid_text +` band (as seen below).&amp;#10;On the next page, please answer some questions on how you felt about this aid.`;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="// Update uniforms&amp;#10;for(var i = 0; i &lt; bands.length; i++) {&amp;#10;    var band = bands[i];&amp;#10;    band.uniforms.frameN = frameN;&amp;#10;}&amp;#10;&amp;#10;button_4.fillColor = 'darkblue';&amp;#10;if (typeof button_4._pixi !== 'undefined') {&amp;#10;    button_4._pixi.interactive = true;&amp;#10;    button_4._pixi.click = function(ev) { continueRoutine = false; }&amp;#10;}" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="for(var i = 0; i &lt; bands.length; i++) {&amp;#10;    let band = bands[i];&amp;#10;    band.active = false;&amp;#10;    band.setAutoDraw(false);&amp;#10;    band.setHighlight(false);&amp;#10;    band.setLowlight(false);&amp;#10;}" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
      <TextComponent name="text_3">
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="None" valType="str"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="num"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Any text&amp;#10;&amp;#10;including line breaks" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="num"/>
      </TextComponent>
      <ButtonComponent name="button_4">
        <Param name="anchor" updates="constant" val="center" valType="str"/>
        <Param name="bold" updates="constant" val="True" valType="bool"/>
        <Param name="borderColor" updates="constant" val="None" valType="color"/>
        <Param name="borderWidth" updates="constant" val="0" valType="num"/>
        <Param name="callback" updates="constant" val="" valType="extendedCode"/>
        <Param name="color" updates="constant" val="white" valType="color"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="darkgrey" valType="color"/>
        <Param name="font" updates="constant" val="&quot;Times New Roman&quot;" valType="str"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="italic" updates="constant" val="False" valType="bool"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="num"/>
        <Param name="name" updates="None" val="button_4" valType="code"/>
        <Param name="oncePerClick" updates="constant" val="True" valType="bool"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="ori" updates="constant" val="0" valType="num"/>
        <Param name="padding" updates="constant" val="" valType="num"/>
        <Param name="pos" updates="constant" val="(0.5, -0.45)" valType="list"/>
        <Param name="save" updates="None" val="every click" valType="str"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="[0.35,0.1]" valType="list"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Click here to continue" valType="str"/>
        <Param name="timeRelativeTo" updates="constant" val="button onset" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ButtonComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="init_qs"/>
    <Routine name="intro"/>
    <LoopInitiator loopType="TrialHandler" name="tutorial">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="tute_config.length" valType="num"/>
      <Param name="name" updates="None" val="tutorial" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="tute"/>
    <LoopTerminator name="tutorial"/>
    <LoopInitiator loopType="TrialHandler" name="phases">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$para.PHASES" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="phases" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$para.RUN_ORDER[phase]" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="feedback"/>
    <LoopTerminator name="trials"/>
    <Routine name="debrief"/>
    <LoopTerminator name="phases"/>
    <LoopInitiator loopType="TrialHandler" name="support_status">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="support_status" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trust_ins"/>
    <Routine name="trust_qs"/>
    <LoopTerminator name="support_status"/>
    <Routine name="outro"/>
  </Flow>
</PsychoPy2experiment>
